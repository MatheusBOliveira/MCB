// <auto-generated />
using System;
using MCB.Core.Infra.Data.EFCore.Postgres.Tests.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MCB.Core.Infra.Data.EFCore.Postgres.Tests.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20190920041003_v0")]
    partial class v0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MCB.Core.Infra.Data.EFCore.Postgres.Tests.DataModels.AppointmentDataModel", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnName("CreatedUser")
                        .HasMaxLength(150);

                    b.Property<Guid>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Observation")
                        .HasMaxLength(500);

                    b.Property<byte[]>("RegistryVersion")
                        .IsRequired()
                        .HasColumnName("RegistryVersion");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnName("UpdatedUser")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("CreatedUser");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Date");

                    b.HasIndex("RegistryVersion");

                    b.HasIndex("UpdatedDate");

                    b.HasIndex("UpdatedUser");

                    b.HasIndex("CustomerId", "Date");

                    b.ToTable("appointment","public");
                });

            modelBuilder.Entity("MCB.Core.Infra.Data.EFCore.Postgres.Tests.DataModels.CustomerDataModel", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime?>("ActivationDate")
                        .HasColumnName("ActivationDate");

                    b.Property<string>("ActivationUser")
                        .HasColumnName("ActivationUser")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnName("CreatedUser")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("InactivationDate")
                        .HasColumnName("InactivationDate");

                    b.Property<string>("InactivationUser")
                        .HasColumnName("InactivationUser")
                        .HasMaxLength(150);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<byte[]>("RegistryVersion")
                        .IsRequired()
                        .HasColumnName("RegistryVersion");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnName("UpdatedUser")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("ActivationDate");

                    b.HasIndex("ActivationUser");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("CreatedUser");

                    b.HasIndex("InactivationDate");

                    b.HasIndex("InactivationUser");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name");

                    b.HasIndex("RegistryVersion");

                    b.HasIndex("UpdatedDate");

                    b.HasIndex("UpdatedUser");

                    b.ToTable("customer","public");
                });

            modelBuilder.Entity("MCB.Core.Infra.Data.EFCore.Postgres.Tests.DataModels.AppointmentDataModel", b =>
                {
                    b.HasOne("MCB.Core.Infra.Data.EFCore.Postgres.Tests.DataModels.CustomerDataModel", "Customer")
                        .WithMany("AppointmentCollection")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}


